"Games"
{
	"tf"
	{
		"Signatures"
		{
			"CWeaponMedigun::CreateMedigunShield"
			{
				// find entity_medigun_shield string with more then just 1 block, the main fuction, 
				//exit that and there should only be 1 function where its contained
				//thats it.
				
				"windows64"	"\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x30\x8B\x91\x58\x0A\x00\x00"
				"linux64"		"@_ZN14CWeaponMedigun19CreateMedigunShieldEv"
				
				"windows"	"\x55\x8B\xEC\x83\xEC\x34\x8B\x15\x2A\x2A\x2A\x2A"
				"linux"		"@_ZN14CWeaponMedigun19CreateMedigunShieldEv"
			}
			"CTFBaseBoss::ResolvePlayerCollision"
			{
				// Announcer.MVM_Tank_Planted, very bottom
				//Long tthink function where you are in right now,  very bottom again, has a  LOC_ and a sub_, if its long, thats probably it.
			//	"windows64"	"\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x30\x8B\x91\x58\x0A\x00\x00"
			//	"linux64"		"@_ZN11CTFBaseBoss22ResolvePlayerCollisionEP9CTFPlayer"
				
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x81\xEC\x68\x01\x00\x00\x56\x57"
				"linux"		"@_ZN11CTFBaseBoss22ResolvePlayerCollisionEP9CTFPlayer"
			}

			"CTFPlayerShared::RecalculatePlayerBodygroups"
			{
				// string aPostInventoryA, most top function.
			//	"windows64"	"\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x20\x48\x8B\xD9\x48\x8B\x89\xC0\x01\x00\x00"
			//	"linux64"		"@_ZN15CTFPlayerShared27RecalculatePlayerBodygroupsEv"
				
				"windows"	"\x56\x8B\xF1\x57\x8B\x8E\x8C\x01\x00\x00\x83\xB9\xA0\x03\x00\x00\x00"
				"linux"		"@_ZN15CTFPlayerShared27RecalculatePlayerBodygroupsEv"
			}
			
			// "mod_build_rate" -> the next non-attribute call
			"CTFGameRules::IsQuickBuildTime"
			{
				"linux"		"@_ZN12CTFGameRules16IsQuickBuildTimeEv"
				"windows"	"\x80\xB9\x72\x0C\x00\x00\x00\x74\x2A\x80\xB9\xD1\x03\x00\x00\x00"
			}
			"CBasePlayer::SnapEyeAngles"
			{
				// string "Usage:  setang pitch yaw <roll optional"
				//Very short CALL
				"windows64"	"\x8B\x02\x89\x81\x6C\x0D\x00\x00"
				"linux64"		"@_ZN11CBasePlayer13SnapEyeAnglesERK6QAngle"
				
				"windows"	"\x55\x8B\xEC\x8B\x45\x08\xD9\x00\xD9\x99\x88\x0B\x00\x00"
				"linux"		"@_ZN11CBasePlayer13SnapEyeAnglesERK6QAngle"
			}
			
			"CBaseEntity::SetAbsVelocity"
			{
				// string "TRAIN(%s); Blocked by %s\n"
				// inside a very tall block, bottom call, this call is modearetly sized and has no strings.
			//	"windows64"	"\x48\x89\x5C\x24\x10\x57\x48\x83\xEC\x40\xF3\x0F\x10\x81\x2C\x03\x00\x00"
			//	"linux64"		"@_ZN11CBaseEntity14SetAbsVelocityERK6Vector"
				
				"windows"	"\x55\x8B\xEC\x83\xEC\x18\x53\x56\x8B\x75\x08\x8B\xD9\xF3\x0F\x10\x06"
				"linux"		"@_ZN11CBaseEntity14SetAbsVelocityERK6Vector"
			}
			"CTFSpellBook::CastSelfStealth"
			{
				// string "spellbook_stealth" in a very long call, directly the sub_ above it.
				
			//	"windows64"		"\x48\x89\x5C\x24\x10\x57\x48\x83\xEC\x40\xF3\x0F\x10\x81\x2C\x03\x00\x00"
			//	"linux64"		"@_ZN12CTFSpellBook15CastSelfStealthEP9CTFPlayer"
				
				"windows"		"\x55\x8B\xEC\xD9\x05\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x6A\x00"
				"linux"			"@_ZN12CTFSpellBook15CastSelfStealthEP9CTFPlayer"
			}
			// "AI node graph corrupt\n" -> last function call
			"UTIL_RemoveImmediate"
			{
				"linux"		"@_Z20UTIL_RemoveImmediateP11CBaseEntity"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x08\x85\xF6\x0F\x84\x2A\x2A\x2A\x2A\xF6\x86\x3C\x01\x00\x00\x01"
			}
			"CTFPlayer::TeamFortress_SetSpeed()"
			{
				"linux"		"@_ZN9CTFPlayer21TeamFortress_SetSpeedEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x24\xA1\x2A\x2A\x2A\x2A\x56\x8B\xF1\x89\x75\xF0"
			}
			"NextBotGroundLocomotion::UpdateGroundConstraint"
			{
				//inlined in windows 64, but it doesnt matter we dont directly need it.
				"library"		"server"
				"linux64"		"@_ZN23NextBotGroundLocomotion22UpdateGroundConstraintEv"
				"windows64"		"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x81\xEC\x28\x01\x00\x00\x56\x57\x8B\xF9\x33\xD2"
				
				"linux"			"@_ZN23NextBotGroundLocomotion22UpdateGroundConstraintEv"
				"windows"		"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x81\xEC\x28\x01\x00\x00\x56\x57\x8B\xF9\x33\xD2"
			}
			"CBaseCombatWeapon::FinishReload()"
			{
				// string aLastShotCrits
				// not extreamly small function, and no other strings, and has multiple calls
				"library"	"server"
				
				"linux"		"@_ZN17CBaseCombatWeapon12FinishReloadEv"
				"windows"	"\x56\x8B\xF1\x8B\x06\x8B\x80\xF4\x06\x00\x00\xFF\xD0\x84\xC0\x74\x2A\xC6\x86\xD8\x05\x00\x00\x00"
			}
			"CTFPlayer::CanAirDash"
			{
				//air_dash_count, smaller function.
				"library"	"server"
				"linux64"		"@_ZNK9CTFPlayer10CanAirDashEv"
				"windows64"	"\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x30\x8B\x81\xD4\x1E\x00\x00"
				
				"linux"		"@_ZNK9CTFPlayer10CanAirDashEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\x53\x57\x8B\xF9\x8B\x87\xB4\x1B\x00\x00"
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				// "add_uber_time" -> CTFPlayerShared::SetChargeEffect
				// CTFPlayerShared::SetChargeEffect called by CTFPlayerShared::RecalculateChargeEffects
				// CTFPlayerShared::RecalculateChargeEffects calls CTFPlayer::GetChargeEffectBeingProvided
				"library"	"server"
				"linux64"		"@_ZN9CTFPlayer28GetChargeEffectBeingProvidedEv"
				"windows64"	"\x40\x53\x48\x83\xEC\x50\x48\x8D\x81\x20\x27\x00\x00"
				
				
				"linux"		"@_ZN9CTFPlayer28GetChargeEffectBeingProvidedEv"
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\x8D\x86\xC4\x22\x00\x00"
			}
			"CTFPlayer::RegenThink"
			{
				//string RegenThink, small function
				"library"	"server"
			//	"linux64"		"@_ZN9CTFPlayer10RegenThinkEv"
			//	"windows64"	"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x45\x33\xC0"
				
				"linux"		"@_ZN9CTFPlayer10RegenThinkEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x7C\x56\x8B\xF1\x8B\x06"
			}
			"CBaseEntity::SetLocalOrigin" // String aBadSetlocalori,   Bad SetLocalOrigin(%f,%f,%f) on %s\n
			{
				"library"	"server"
			//	"linux64"		"@_ZN11CBaseEntity14SetLocalOriginERK6Vector"
			//	"windows64"	"\x48\x89\x5C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x50\xF3\x0F\x10\x0D\xE1\x45\xA4\x00"
				
				"linux"		"@_ZN11CBaseEntity14SetLocalOriginERK6Vector"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\xF3\x0F\x10\x0D\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x0F\x28\xC1\x0F\x57\x05\x2A\x2A\x2A\x2A\x57\x8B\xF9\xF3\x0F\x10\x16\x0F\x2F\xD0\x89\x7D\xF8\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x5E\x04\x0F\x2F\xD8\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCB\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x5E\x08\x0F\x2F\xD8\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCB\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2E\x97\x40\x03\x00\x00"
			}
			"CBaseEntity::SetLocalAngles" // String aBadSetlocalori,   Bad SetLocalAngles(%f,%f,%f) on %s\
			{
				"library"	"server"
			//	"linux64"		"@_ZN11CBaseEntity14SetLocalAnglesERK6QAngle"
			//	"windows64"	"\x48\x89\x5C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x50\xF3\x0F\x10\x0D\xE1\x45\xA4\x00"
				
				"linux"		"@_ZN11CBaseEntity14SetLocalAnglesERK6QAngle"
				"windows"	"\x55\x8B\xEC\x83\xEC\x08\xF3\x0F\x10\x0D\x2A\x2A\x2A\x2A\x56\x8B\x75\x08\x0F\x28\xC1\x0F\x57\x05\x2A\x2A\x2A\x2A\x57\x8B\xF9\xF3\x0F\x10\x16\x0F\x2F\xD0\x89\x7D\xF8\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCA\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x5E\x04\x0F\x2F\xD8\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCB\x0F\x86\x2A\x2A\x2A\x2A\xF3\x0F\x10\x5E\x08\x0F\x2F\xD8\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2F\xCB\x0F\x86\x2A\x2A\x2A\x2A\x0F\x2E\x97\x4C\x03\x00\x00"
			}
			
			"CBaseEntity::SetAbsOrigin" // String models/airboat.mdl, look up, first call
			{
				"library"	"server"
			//	"linux64"		"@_ZN11CBaseEntity12SetAbsOriginERK6Vector"
			//	"windows64"	"\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x70\x48\x8B\xFA"
				
				"linux"		"@_ZN11CBaseEntity12SetAbsOriginERK6Vector"
				"windows"	"\x55\x8B\xEC\x83\xEC\x44\x56\x57\x8B\x7D\x08\x8B\xF1\xE8\x2A\x2A\x2A\x2A"
			}
			"CBaseEntity::SetAbsAngles" // String models/airboat.mdl, look up, 2nd call
			{
				"library"	"server"
			//	"linux64"		"@_ZN11CBaseEntity12SetAbsAnglesERK6QAngle"
			//	"windows64"	"\x48\x89\x5C\x24\x18\x56\x48\x81\xEC\xA0\x00\x00\x00\x48\x8B\xF2"
				
				"linux"		"@_ZN11CBaseEntity12SetAbsAnglesERK6QAngle"
				"windows"	"\x55\x8B\xEC\x83\xEC\x74\x53\x8B\x5D\x08\x56\x8B\xF1\xE8\x2A\x2A\x2A\x2A"
			}
			"CBaseAnimating::InvalidateBoneCache"// Void CBaseCombatCharacter::Weapon_Drop ("ValveBiped.Weapon_bone"), Big function with 11 calls, the 5th one from top, very small function
			{
				"library"	"server"
				"linux64"		"@_ZN14CBaseAnimating19InvalidateBoneCacheEv"
				"windows64"	"\x48\x8B\x89\x88\x05\x00\x00\xE9\x2A\x2A\x2A\x2A"
				
				"linux"		"@_ZN14CBaseAnimating19InvalidateBoneCacheEv"
				"windows"	"\xFF\xB1\x6C\x04\x00\x00"
			}
			"CTFProjectile_HealingBolt::ImpactTeamPlayer()"
			{
				// x-ref "Weapon_Arrow.ImpactFleshCrossbowHeal" in branching function
				"library"	"server"
				"linux64"		"@_ZN25CTFProjectile_HealingBolt16ImpactTeamPlayerEP9CTFPlayer"
				"windows64"	"\x48\x85\xD2\x0F\x84\x2A\x2A\x2A\x2A\x57\x41\x57\x48\x83\xEC\x58"
				
				"linux"		"@_ZN25CTFProjectile_HealingBolt16ImpactTeamPlayerEP9CTFPlayer"
				"windows"	"\x55\x8B\xEC\x83\xEC\x10\x56\x57\x8B\x7D\x08\x8B\xF1\x89\x75\xF0"
			}
			"CTFProjectile_Arrow::Create" //both tf_projectile_grapplinghook and tf_projectile_arrow in the same function.
			{
				"library"	"server"
				"linux64"		"@_ZN19CTFProjectile_Arrow6CreateERK6VectorRK6QAngleff16ProjectileType_tP11CBaseEntityS8_"
				"windows64"	"\x48\x89\x5C\x24\x08\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x60\x8B\x9C\x24\x90\x00\x00\x00"
				
				"linux"		"@_ZN19CTFProjectile_Arrow6CreateERK6VectorRK6QAngleff16ProjectileType_tP11CBaseEntityS8_"
				"windows"	"\x55\x8B\xEC\x56\x8B\x75\x18\x57\x83\xFE\x0B"
			}
			"Studio_FindAttachment"
			{
				//sentry_on_go_active -> CBaseAnimating::LookupAttachment -> Studio_FindAttachment
				"linux64"		"@_Z21Studio_FindAttachmentPK10CStudioHdrPKc"
				"windows64"		"\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x48\x8B\xF2\x48\x8B\xF9\x48\x85\xC9"
				
				"linux"		"@_Z21Studio_FindAttachmentPK10CStudioHdrPKc"
				"windows"		"\x55\x8B\xEC\x53\x56\x57\x8B\x7D\x08\x85\xFF\x74\x2A\x8B\xCF"
			}
			"CTFGameRules::CalcPlayerScore"
			{
				"linux64"		"@_ZN12CTFGameRules15CalcPlayerScoreEP12RoundStats_tP9CTFPlayer"
				"windows64"	"\x40\x53\x48\x83\xEC\x30\x4C\x8B\xD2"
				
				"linux"		"@_ZN12CTFGameRules15CalcPlayerScoreEP12RoundStats_tP9CTFPlayer"
				"windows"	"\x55\x8B\xEC\x57\x8B\x7D\x08\x85\xFF\x75\x2A\x33\xC0\x5F\x5D\xC3\x8B\x57\x38"
			}
			// string "Weapon_BuffBanner.HornBlue" is a func WITHOUT "models/workshop/weapons/c_models/c_para"
			"CTFBuffItem::BlowHorn" 
			{
				"library"	"server"
				"linux64" 	"@_ZN11CTFBuffItem8BlowHornEv"
				"windows64" 	"\x48\x89\x5C\x24\x08\x57\x48\x83\xEC\x30\x48\x8B\xF9\xE8\x2A\x2A\x2A\x2A\x48\x8B\xD8\x48\x85\xC0\x0F\x84\x2A\x2A\x2A\x2A\x48\x8B\x00"
				
				"linux" 	"@_ZN11CTFBuffItem8BlowHornEv"
				"windows" 	"\x56\x57\x8B\xF9\xE8\x2A\x2A\x2A\x2A\x8B\xF0\x85\xF6\x0F\x84\x2A\x2A\x2A\x2A\x8B\x16\x8B\xCE\x8B\x92\x4C\x01\x00\x00\xFF\xD2\x84\xC0\x0F\x84\x2A\x2A\x2A\x2A\x8B\x06"
			}
			"CWeaponMedigun::AllowedToHealTarget()"
			{
				// contains non-unique string "weapon_blocks_healing" with references to CTFPlayerShared offset in the next few blocks
				"library"	"server"
				
				"linux"		"@_ZN14CWeaponMedigun19AllowedToHealTargetEP11CBaseEntity"
				"windows"	"\x55\x8B\xEC\x53\x8B\xD9\x56\x57\x8B\x93\x10\x02\x00\x00\x85\xD2\x0F\x84\x2A\x2A\x2A\x2A\xB9\xFF\x1F\x00\x00\x83\xFA\xFF\x74\x2A\x0F\xB7\xCA\xA1\x2A\x2A\x2A\x2A\xC1\xE1\x04\x8D\x78\x04\x03\xF9\x0F\x84\x2A\x2A\x2A\x2A\xC1\xEA\x10\x39\x57\x04\x0F\x85\x2A\x2A\x2A\x2A\x8B\x3F\x85\xFF\x0F\x84\x2A\x2A\x2A\x2A\x8B\x07\x8B\xCF\x8B\x80\x4C\x01\x00\x00\xFF\xD0\x84\xC0\x0F\x84\x2A\x2A\x2A\x2A\x8B\x75\x08\x85\xF6\x74\x2A"
			}
			"PassServerEntityFilter"
			{
				/* String: "RagdollImpact" -> 2 blocks down, , get sub, from Pickup_ForcePlayerToDropThisObject, Xref ->, go all the way up, */
				"windows" "\x55\x8B\xEC\x56\x8B\x75\x0C\x57\x85\xF6\x74\x2A\x8B\x7D\x08"
				"windows64" "\x48\x89\x5C\x24\x08\x48\x89\x74\x24\x10\x57\x48\x83\xEC\x20\x48\x8B\xFA\x48\x8B\xF1\x48\x85\xD2\x0F\x84\x2A\x2A\x2A\x2A\x48\x3B\xCA"
				"linux" "@_Z22PassServerEntityFilterPK13IHandleEntityS1_"
				"linux64" "@_Z22PassServerEntityFilterPK13IHandleEntityS1_"
			}
			"CTFPlayer::SpeakConceptIfAllowed()"
			{
				// unique string xref "disguiseclass:%s"
				"library"		"server"
				"linux64"		"@_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
				"windows64"		"\x48\x89\x5C\x24\x10\x4C\x89\x4C\x24\x20\x4C\x89\x44\x24\x18\x55"
				
				"linux"			"@_ZN9CTFPlayer21SpeakConceptIfAllowedEiPKcPcjP16IRecipientFilter"
				"windows"		"\x55\x8B\xEC\x81\xEC\xF4\x00\x00\x00\x53\x8B\xD9"
			}
			"CTFPlayer::ManageRegularWeapons()"
			{
				// semi-unique xref "PlayerLoadoutUpdated"
				"library"		"server"
			//	"linux64"			"@_ZN9CTFPlayer20ManageRegularWeaponsEP19TFPlayerClassData_t"
			//	"windows64"		"\x48\x8B\xC4\x48\x89\x50\x10\x55\x53\x56\x57\x41\x54\x41\x55"

				"linux"			"@_ZN9CTFPlayer20ManageRegularWeaponsEP19TFPlayerClassData_t"
				"windows"		"\x55\x8B\xEC\x83\xEC\x6C\x57\x8B\xF9\xE8\x2A\x2A\x2A\x2A"

			}
			"CTFWeaponBaseMelee::GetShootSound"
			{
				// "Weapon_Slap.OpenHand", last function in the end
				"library"		"server"
				"linux64"			"@_ZNK18CTFWeaponBaseMelee13GetShootSoundEi"
				"windows64"		"\x48\x89\x6C\x24\x10\x48\x89\x74\x24\x18\x57\x48\x83\xEC\x20\x8B\xEA\x48\x8B\xF9"

				"linux"			"@_ZNK18CTFWeaponBaseMelee13GetShootSoundEi"
				"windows"			"\x55\x8B\xEC\x53\x8B\x5D\x08\x57\x8B\xF9\x83\xFB\x09"

			}
			"CBaseAnimating::ResetSequenceInfo" //( )
			{
				"library"	"server"
				// string "Halloween.EyeballBossStunned" and "Max Eyeball DPS taken = %3.2f\n"
			//	"windows64"	"\x41\x56\x48\x83\xEC\x20\x48\x8B\x05\xBB\x38\xB4\x00"
			//	"linux64"		"@_ZN14CBaseAnimating17ResetSequenceInfoEv"
				
				"windows"	"\x55\x8B\xEC\x51\x56\x8B\xF1\x83\xBE\xD8\x03\x00\x00\xFF"
				"linux"		"@_ZN14CBaseAnimating17ResetSequenceInfoEv"
			}			
			"CTFPlayerShared::PulseRageBuff()"
			{
				// last call in assembly block containing unique string "mod_soldier_buff_range"
				"library"	"server"
				"linux64"		"@_ZN15CTFPlayerShared13PulseRageBuffENS_13ERageBuffSlotE"
				"windows64"	"\x48\x8B\xC4\x56\x41\x54"
				
				"linux"		"@_ZN15CTFPlayerShared13PulseRageBuffENS_13ERageBuffSlotE"
				"windows"		"\x55\x8B\xEC\x83\xEC\x14\x33\xC0"
			}
			"CTFWeaponBaseMelee::DoSwingTraceInternal"
			{
				//string "melee_range_multiplier"
  			  	"library"    "server"
    			"linux64"      "@_ZN18CTFWeaponBaseMelee20DoSwingTraceInternalER10CGameTracebP10CUtlVectorIS0_10CUtlMemoryIS0_iEE"
				"windows64"	"\x48\x89\x74\x24\x18\x55\x57\x41\x55\x41\x56\x41\x57\x48\x8D\xAC\x24\xA0\xF6\xFF\xFF"
				
				"linux"      "@_ZN18CTFWeaponBaseMelee20DoSwingTraceInternalER10CGameTracebP10CUtlVectorIS0_10CUtlMemoryIS0_iEE"
				"windows"	"\x53\x8B\xDC\x83\xEC\x08\x83\xE4\xF0\x83\xC4\x04\x55\x8B\x6B\x04\x89\x6C\x24\x04\x8B\xEC\x81\xEC\x38\x05\x00\x00"
			}
			"CTFGCServerSystem::PreClientUpdate"
			{
				// "You must set maxplayers to 32 to host Mann vs. Machine\n"
				"library"	"server"
				"linux64"		"@_ZN17CTFGCServerSystem15PreClientUpdateEv"
				"windows64"	"\x40\x53\x55\x56\x41\x56\x41\x57\x48\x83\xEC\x30"
				
				"linux"		"@_ZN17CTFGCServerSystem15PreClientUpdateEv"
				"windows"	"\x55\x8B\xEC\x83\xEC\x28\x53\x56\x8B\xD9"
			}
			"LookupActivity" //random guessing.
			{
				//this function looks nothing like the one in linux, its littearlly guessing good luck.
				"library"	"server"
				"windows"	"\x55\x8B\xEC\x57\x8B\x7D\x08\x85\xFF\x75\x2A\x33\xC0\x5F\x5D\xC3\x53"
				"linux"		"@_Z14LookupActivityP10CStudioHdrPKc"
			}
			"CTraceFilterSimple::ShouldHitEntity"
			{
				"library"	"server"
				"linux"		"@_ZN18CTraceFilterSimple15ShouldHitEntityEP13IHandleEntityi"
				"windows"	"\x55\x8B\xEC\x57\xFF\x75\x0C\x8B\xF9\xFF\x75\x08\xE8\x2A\x2A\x2A\x2A\x83\xC4\x08"
			}
			"CGameEventManager::CreateEvent" // Look for string "CreateEvent: event '%s' not registered."
            {
                "library"    "engine"
                "linux"        "@_ZN17CGameEventManager11CreateEventEPKcb"
                "windows"    "\x55\x8B\xEC\x56\x8B\x75\x08\x57\x85\xF6\x74\x20\x80\x3E\x00\x74\x1B\x56\xE8\x19"
                "linux64"    "@_ZN17CGameEventManager11CreateEventEPKcb"
                "windows64"    ""
            }
			"SV_CreateBaseline" // Look for string "aCreatedClassBa ; "Created class baseline: %i classes, %i ""
            {
                "library"    	"engine"
                "linux"        	"@_Z17SV_CreateBaselinev"
                "windows"   	"\x55\x8B\xEC\xB8\x74\xA5\x04\x00"
                "linux64"    	"@_Z17SV_CreateBaselinev"
                "windows64"   	""
            }
		}
		"Functions"
		{
			"CGameEventManager::CreateEvent"
			{
				"signature" "CGameEventManager::CreateEvent"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"address"
				
				"arguments"
				{
					"name"
					{
						"type" "charptr"
					}
					
					"force"
					{
						"type" "bool"
					}
				}
			}
			"CTFPlayer::TeamFortress_SetSpeed()"
			{
				"signature"	"CTFPlayer::TeamFortress_SetSpeed()"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CEconItemView::IterateAttributes"
			{
				"offset"	"CEconItemView::IterateAttributes"
				"hooktype"	"raw"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
					"IEconItemAttributeIterator"
					{
						"type"	"objectptr"
					}
				}
			}
			"CWeaponMedigun::CreateMedigunShield"
			{
				"signature"	"CWeaponMedigun::CreateMedigunShield"
				"callconv"  "thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTFBaseBoss::ResolvePlayerCollision"
			{
				"signature"	"CTFBaseBoss::ResolvePlayerCollision"
				"callconv"  "thiscall"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pPlayer"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFCrossbow::Holster"
			{
				"offset"	"CTFCrossbow::Holster"
				"hooktype"  "entity"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"pSwitchingTo"
					{
						"type"	"cbaseentity"
					}
				}
			}
			
			"CTFSpellBook::CastSelfStealth"
			{
				"signature"		"CTFSpellBook::CastSelfStealth"
				"callconv"    	"thiscall"
				"return"		"bool"
				"this"			"entity"
			}
			"CTFWeaponBaseMelee::DoSwingTraceInternal"
			{
				"signature"	"CTFWeaponBaseMelee::DoSwingTraceInternal"
				"callconv"    	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"trace"
					{
						"type"	"objectptr"
					}
					"bCleave"
					{
						"type"	"bool"
					}
					"pTargetTraceVector"
					{
						"type"	"vectorptr"
					}
				}
			}
			"CTFGameRules::IsQuickBuildTime"
			{
				"signature"	"CTFGameRules::IsQuickBuildTime"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"ignore"
			}
			"CTFPlayerShared::PulseRageBuff()"
			{
				"signature"		"CTFPlayerShared::PulseRageBuff()"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"address"
				"arguments"
				{
					"buff_slot"
					{
						"type"	"int"
					}
				}
			}
			"NextBotGroundLocomotion::UpdateGroundConstraint"
			{
				"signature"	"NextBotGroundLocomotion::UpdateGroundConstraint"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"address"
				"arguments"
				{
				
				}
			}
			"CTFBuffItem::BlowHorn"
			{
				"signature"    	"CTFBuffItem::BlowHorn"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFGCServerSystem::PreClientUpdate"
			{
				"signature"    	"CTFGCServerSystem::PreClientUpdate"
				"callconv"	"thiscall"
				"return"    	"void"
				"this"		"ignore"
			}
			"CBaseObject::FirstSpawn"
           	{
				"signature"    	"CBaseObject::FirstSpawn"
				"callconv"		"thiscall"
  				"return"    	"void"
 				"this"        	"entity"
           	}
			"PassServerEntityFilter"
			{
				"signature"    	"PassServerEntityFilter"
				"callconv"		"cdecl"
				"return"		"bool"
				"arguments"
				{
					"toucher" 
					{
						"type" "cbaseentity"
					//	"linux"
					//	{
					//		"register"	"eax"
					//	}
					}
					"passer" 
					{
						"type" "cbaseentity"
					//	"linux"
					//	{
					//		"register"	"edx"
					//	}
					}
				}
			}
			"CBaseGrenade::Explode"
			{
				"offset"	"CBaseGrenade::Explode"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"objectptr"
					}
					"bitsDamageType"
					{
						"type"	"int"
					}
				}
			}
			"CBaseGrenade::Detonate"
			{
				"offset"	"CBaseGrenade::Detonate"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CBasePlayer::ForceRespawn"
			{
				"offset"	"CBasePlayer::ForceRespawn"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFPlayer::CanAirDash"
			{
				"signature"	"CTFPlayer::CanAirDash"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
			}
			"CTFProjectile_HealingBolt::ImpactTeamPlayer()"
			{
				"signature"		"CTFProjectile_HealingBolt::ImpactTeamPlayer()"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"target"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFPlayer::GetChargeEffectBeingProvided"
			{
				"signature"	"CTFPlayer::GetChargeEffectBeingProvided"
				"callconv"	"thiscall"
				"return"	"int"
				"this"		"entity"
			}
			"CTFPlayer::IsPlayerClass"
			{
				"signature"	"CTFPlayer::IsPlayerClass"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"entity"
				"arguments"
				{
					"iClass"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::RegenThink"
			{
				"signature"	"CTFPlayer::RegenThink"
				"callconv"	"thiscall"
				"return"	"void"
				"this"		"entity"
			}
			"CTFParticleCannon::FireChargedShot"
            {
				   "offset"    	"CTFParticleCannon::FireChargedShot"
				   "hooktype"    "entity"
				   "return"    	"void"
				   "this"        "entity"
            }
			"CBaseCombatWeapon::FinishReload()"
			{
				"signature"		"CBaseCombatWeapon::FinishReload()"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
			}
			"CTFWeaponBase::FinishReload()"
			{
				"offset"		"CTFWeaponBase::FinishReload()"
				"hooktype"		"entity"
				"return"		"void"
				"this"			"entity"
			}
			"CBaseCombatWeapon::Reload()"
			{
				"offset"		"CBaseCombatWeapon::Reload()"
				"hooktype"		"entity"
				"return"		"void"
				"this"			"entity"
			}
			"CTFBaseRocket::Explode"
			{
				"offset"	"CTFBaseRocket::Explode"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"objectptr"
					}
					"pEntity"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CTFProjectile_SpellFireball::Explode"
			{
				"offset"	"CTFProjectile_SpellFireball::Explode"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
				"arguments"
				{
					"pTrace"
					{
						"type"	"objectptr"
					}
				}
			}
			"CWeaponMedigun::PrimaryAttack()"
			{
				"offset"	"CWeaponMedigun::PrimaryAttack()"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFPistol_ScoutPrimary::SecondaryAttack()"
			{
				"offset"	"CTFPistol_ScoutPrimary::SecondaryAttack()"
				"hooktype"	"entity"
				"return"	"void"
				"this"		"entity"
			}
			"CTFGrenadePipebombProjectile::PipebombTouch" 
			{
				// virtual void PipebombTouch( CBaseEntity *pOther )
				"offset" 		"CTFGrenadePipebombProjectile::PipebombTouch"
				"hooktype" 		"entity"
				"return" 		"void"
				"this" 			"entity"
				"arguments"
				{
					"other"
					{
						"type" "cbaseentity"
					}
				}
			}
			"CBasePlayer::EquipWearable" 
			{
				"offset" 		"CBasePlayer::EquipWearable"
				"hooktype" 		"entity"
				"return" 		"void"
				"this" 			"entity"
			}
			"CTFPlayer::SpeakConceptIfAllowed()" 
			{
				"signature"		"CTFPlayer::SpeakConceptIfAllowed()"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"iConcept"
					{
						"type"	"int"
					}
					"modifiers"
					{
						"type"	"charptr"
					}
					"pszOutResponseChosen"
					{
						"type"	"charptr"
					}
					"bufsize"
					{
						"type"	"int"
					}
					"IRecipientFilter"
					{
						"type"	"int"
					}
				}
			}
			"CTFPlayer::ManageRegularWeapons()"
			{
				"signature"		"CTFPlayer::ManageRegularWeapons()"
				"callconv"		"thiscall"
				"return"		"void"
				"this"			"entity"
				"arguments"
				{
					"class_data"
					{
						"type"	"int"
					}
				}
			}
			"CWeaponMedigun::AllowedToHealTarget()"
			{
				"signature"		"CWeaponMedigun::AllowedToHealTarget()"
				"callconv"		"thiscall"
				"return"		"bool"
				"this"			"entity"
				"arguments"
				{
					"heal_target"
					{
						"type"	"cbaseentity"
					}
				}
			}
			"CBaseCombatWeapon::ItemPostFrame()"
			{
				"offset"		"CBaseCombatWeapon::ItemPostFrame()"
				"hooktype"		"entity"
				"return"		"void"
				"this"			"entity"
			}
			"CBaseEntity::UpdateTransmitState()"
			{
				"offset"		"CBaseEntity::UpdateTransmitState()"
				"hooktype"		"entity"
				"return"		"int"
				"this"			"entity"
			}
			"CTraceFilterSimple::ShouldHitEntity"
			{
				"signature"	"CTraceFilterSimple::ShouldHitEntity"
				"callconv"	"thiscall"
				"return"	"bool"
				"this"		"address"
				"arguments"
				{
					"pHandleEntity"
					{
						"type"	"cbaseentity"
					}
					"contentsMask"
					{
						"type" 	"int"
					}
				}
			}
		}
		"Offsets"
		{
			"CGameEventManager::LoadEventsFromFile"
            {
                "linux"        "2"
                "windows"    "1"
                "linux64"    "2"
                "windows64"    "1"
            }
			"CBaseEntity::WorldSpaceCenter"		
			{		
				"windows"	"156"		
				"linux"		"157"
			}
			"CTFGrenadePipebombProjectile::PipebombTouch" 
			{
				"windows" 	"261"
				"linux" 	"262"
			}
			"CEconItemView::IterateAttributes"
			{
				"windows"	"18"
				"linux"		"19"
			}
			"CWeaponMedigun::PrimaryAttack()"
			{
				"windows"	"287"
				"linux"		"293"
			}
			"CTFPistol_ScoutPrimary::SecondaryAttack()"
			{
				"windows"	"288"
				"linux"		"294"
			}
			"CTFWeaponBase::FinishReload()"
			{
				"windows"	"282"
				"linux"		"288"
			}
			"CBaseCombatWeapon::Reload()"
			{
				"windows"	"284"
				"linux"		"290"
			}
			"CBasePlayer::EquipWearable"
			{
				"linux"		"439"
				"windows"	"438"
			}
			"CBasePlayer::ForceRespawn"
			{
				"linux"		"338"
				"windows"	"337"
			}
			"CBaseEntity::GetVectors"
			{
				"windows"	"143"
				"linux"		"144"
			}
			"CTFParticleCannon::FireChargedShot"
			{
				"windows"	"493"
				"linux"		"500"
			}
			"CBaseGrenade::Explode"
			{
				"linux"		"237"
				"windows"	"236"
			}
			"CBaseGrenade::Detonate"
			{
				"linux"		"238"
				"windows"	"237"
			}
			"CTFBaseRocket::Explode"
			{
				"linux"		"241"
				"windows"	"240"
			}
			"CTFProjectile_SpellFireball::Explode"
			{
				"linux"		"251"
				"windows"	"248"
			}
			"CBasePlayer::CheatImpulseCommands"
			{
				"linux"		"380"
				"windows"	"379"
			}
			"CTFCrossbow::Holster"
			{
				"linux"		"269"
				"windows"	"263"
			}
			"CBaseCombatWeapon::ItemPostFrame()"
			{
				"windows"	"273"
				"linux"		"279"
			}
			//CBaseEntity is arbitrary.
			"CBaseEntity::UpdateTransmitState()"
			{
				"windows"	"21"
				"linux"		"22"
			}
			"CBaseAnimating::RefreshCollisionBounds"
			{
				"windows"	"219"
				"linux"		"220"
			}
			"IBody::GetSolidMask"
			{
				"windows"	"81"
				"linux"		"82"
			}
			"CBaseAnimating::BecomeRagdollOnClient"
			{
				"windows"	"206"
				"linux"		"207"
			}
			"CBaseBoss::m_bResolvePlayerCollisions"
			{
				// Offset from m_lastHealthPercentage
				"windows"	"28"
				"linux"		"28"
			}
		}
	}
}